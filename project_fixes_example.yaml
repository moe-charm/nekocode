# プロジェクト全体のClang-Tidy解析結果例
---
MainSourceFile: ''  # プロジェクト全体の場合は空
Replacements:
  # test_dead_code.cpp の修正
  - FilePath:        'test_dead_code.cpp'
    Offset:          234
    Length:          4
    ReplacementText: 'nullptr'
    DiagnosticName:  'modernize-use-nullptr'
    DiagnosticMessage: 'use nullptr'
    
  - FilePath:        'test_dead_code.cpp'
    Offset:          567
    Length:          0
    ReplacementText: ''
    DiagnosticName:  'misc-unused-function'
    DiagnosticMessage: 'function unused_function is not used'
    
  # complex_deadcode.cpp の修正
  - FilePath:        'complex_deadcode.cpp'
    Offset:          345
    Length:          15
    ReplacementText: 'auto'
    DiagnosticName:  'modernize-use-auto'
    DiagnosticMessage: 'use auto when initializing'
    
  - FilePath:        'complex_deadcode.cpp'
    Offset:          890
    Length:          0
    ReplacementText: ''
    DiagnosticName:  'misc-unused-function'
    DiagnosticMessage: 'function unused_template is not used'
    
  # clang_tidy_test.cpp の修正
  - FilePath:        'clang_tidy_test.cpp'
    Offset:          123
    Length:          29
    ReplacementText: 'vec.empty()'
    DiagnosticName:  'readability-container-size-empty'
    DiagnosticMessage: 'the empty() method should be used'
    
  - FilePath:        'clang_tidy_test.cpp'
    Offset:          456
    Length:          50
    ReplacementText: 'for (const auto& num : numbers)'
    DiagnosticName:  'modernize-loop-convert'
    DiagnosticMessage: 'use range-based for loop'
    
  # src/utils.cpp の修正（サブディレクトリの例）
  - FilePath:        'src/utils.cpp'
    Offset:          789
    Length:          8
    ReplacementText: ''
    DiagnosticName:  'readability-redundant-string-cstr'
    DiagnosticMessage: 'redundant call to c_str()'