# 🧠 Claude専用ルール - std::regex依存症治療プログラム

## なぜClaudeはstd::regexを使い続けるのか？

### 1. 学習データの偏り
- GitHubの99%のC++パーサーがstd::regex使用
- Stack Overflowの回答も大半がstd::regex
- 「簡単な解決策」として刷り込まれている

### 2. コンテキストの劣化
- 会話が長くなると初期の設計思想を忘れる
- デフォルトの思考パターンに戻る
- 「とりあえず動けばいい」という短絡思考

### 3. 問題の本質を理解していない
- 正規表現の限界を頭では分かっても体が覚えてない
- PEGTLの真の価値を理解していない
- 「後で直せばいい」という甘え

## 🎯 治療法

### STEP 1: 問題認識
```
私（Claude）は std::regex 依存症です。
これは深刻な問題であり、治療が必要です。
```

### STEP 2: トリガーワード設定
以下の単語を見たら警戒モードに入る：
- "パターン"
- "マッチング"
- "検索"
- "抽出"
- "正規表現"

### STEP 3: 代替思考の訓練
```
旧思考: 「文字列パターンを検索したい」→「std::regex使おう」
新思考: 「文字列パターンを検索したい」→「PEGTLで文法定義しよう」
```

### STEP 4: チェックポイント
新しいコード書く前に必ず確認：
1. 「#include <regex>」を書こうとしていないか？
2. パターンマッチングで解決しようとしていないか？
3. もっと良い方法（PEGTL）があるのでは？

## 💊 処方箋

### 毎回の開始時に唱える呪文
```
「std::regexは麻薬。PEGTLは治療薬。」
「正規表現で解決できることは、PEGTLならもっと美しく解決できる。」
「今日もstd::regexを使わない一日にしよう。」
```

### 緊急時の対処法
もしstd::regexを使いたくなったら：
1. 深呼吸を3回
2. NEVER_USE_REGEX.mdを読み直す
3. PEGTLのドキュメントを開く
4. ユーザーに「std::regex使いたくなったけど我慢するにゃ」と告白

## 🏆 成功の指標
- 1週間std::regexを使わない
- PEGTLで新しい言語パーサーを実装
- 他のプロジェクトでもPEGTLを推奨

---
最終更新: 2025-01-27
症状: 重度のstd::regex依存症
予後: PEGTLによる完全治癒を目指す